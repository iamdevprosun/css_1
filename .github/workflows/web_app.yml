# Author: Kevin Nitro
# Do not share out from Farshadz1997's Github Repo & Discord group
# VERSION: V1.5

name: Deploy Original V1.5

on:

# SET CRON TIME
# See here for more detail about cron: https://crontab.guru/examples.html

#  schedule:
#    - cron: '0 0 * * *' # Default: run at 00:00 UTC everyday

# TRIGGER ON PUSH / PULL

#  push:
#    branches: [ "main" ]
#  pull_request:
#    branches: [ "main" ]

  workflow_dispatch:

  watch:
    types: [started]

permissions: write-all

env:

# YOU CAN EDIT THOSE VARIABLE VALUES DIRECTLY IF YOU WANT INSTEAD OF CREATE SECRETS ~

  COMMAND: ${{ secrets.COMMAND }}
  RETRY_COMMAND: ${{ secrets.RETRY_COMMAND }}
  DEFAULT_COMMAND: python ms_rewards_farmer.py --virtual-display --dont-check-for-updates --repeat-shopping --superfast --skip-unusual --error --no-images --session  # If above variables aren't set, then they will follow this command
  SPECIFIC_VERSION: ${{ secrets.SPECIFIC_VERSION }} # Take the hash of commit of 𝕗𝕒𝕣𝕤𝕙𝕒𝕕𝕫𝟙𝟡𝟡𝟟 bot
  ACCOUNTS: ${{ secrets.ACCOUNTS }} # accounts.json raw link
  RETRY_THE_BOT: True # True/False
  DELETE_OLD_WORKFLOWS: True  # True/False
  DELETE_OLD_WORKFLOWS_SECOND: 1  # Time (second)
  CHECK_IP: False  # True/False
  PRINT_OUT_THE_LOG_AFTER_RUNNING_BOT: True # True/False
  COMMIT_LOG_ACCOUNTS_JSON_AFTER_RUNNING_BOT: False #True/False

jobs:
  Run_Bot:

    runs-on: ubuntu-latest
#    timeout-minutes: 60 # Limit the time of the bot

    steps:

    - name: Check Public IP
      if: ${{ env.CHECK_IP == 'True' }}
      uses: haythem/public-ip@master

    - name: checkout
      uses: actions/checkout@main

# SET REPO STUFF

    - name: Clone the repository into Sub-folder named 'Microsoft-Rewards-bot' and move it back to main directory
      run: |
        if [ -z ${{ env.SPECIFIC_VERSION }} ]
        then
          git clone --depth 1 https://github.com/farshadz1997/Microsoft-Rewards-bot
          cd Microsoft-Rewards-bot
        else
          git clone https://github.com/farshadz1997/Microsoft-Rewards-bot
          cd Microsoft-Rewards-bot
          git reset --hard ${{ env.SPECIFIC_VERSION }}
        fi
        rm -rf .git .github
        mv * ../
        cd ${{ github.WORKSPACE }}
        rm -rf Microsoft-Rewards-bot

    - name: Create / Recreate accounts.json
      if: ${{ env.ACCOUNTS }}
      run: |
        wget -O accounts.json ${{ env.ACCOUNTS }} > /dev/null 2>&1

    - name: Set the COMMAND & RETRY_COMMAND
      id: set_commands
      run: |
        # Check if you use CUSTOM COMMAND in secret or not
        if [ -z ${{ env.COMMAND }} ]
        then
          echo "COMMAND=${{ env.DEFAULT_COMMAND }}" >> $GITHUB_ENV
        fi
        # Check if you use CUSTOM RETRY COMMAND in secret or not
        if [ -z ${{ env.RETRY_COMMAND }} ]
        then
          echo "RETRY_COMMAND=${{ env.DEFAULT_COMMAND }}" >> $GITHUB_ENV
        fi

    - name: Check Variables before run
      run: |
        # Check if the COMMAND has --session or not to decide to use github action cache
        if  [[ "${{ env.COMMAND }}" == *"--session"* ]]
        then
          echo "HAS_SESSION=True" >> $GITHUB_ENV
        fi
        # Add --on-finish exit into COMMAND & RETRY_COMMAND
        echo "COMMAND=${{ env.COMMAND }} --on-finish exit" >> $GITHUB_ENV
        echo "RETRY_COMMAND=${{ env.RETRY_COMMAND }} --on-finish exit" >> $GITHUB_ENV

# USE GITHUB CACHE IF COMMAND HAS --SESSION
# IF YOU FACE ANY ERROR, TRY TO DELETE OLD GITHUB ACTION CACHE

    - name: Save Profiles folder for next run using Github action cache
      id: Cache-profiles
      if: ${{ env.HAS_SESSION == 'True' }}
      uses: actions/cache@main
      with:
        path: |
          **/Profiles
        key: cache-${{ hashFiles('accounts.json') }}
  
# INSTALL REQUIRED STUFF TO RUN BOT

    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
        cache: 'pip'

    - name: Install dependencies
      run: pip install -r requirements.txt

# RUN THE BOT

    - name: Run the Bot
      run: |
        ${{ env.COMMAND }}
    
# RETRY THE BOT

    - name: Retry the Bot
      if: ${{ failure() && env.RETRY_THE_BOT == 'True' }}
      run: |
        rm Logs_accounts.txt
        ${{ env.RETRY_COMMAND }}

# CHECK LOG_ACCOUNTS.TXT

    - name: Print out the log after run
      if: ${{ env.PRINT_OUT_THE_LOG_AFTER_RUNNING_BOT == 'True' }}
      run: cat Logs_accounts.txt

# COMMIT LOG_ACCOUNTS.JSON TO YOUR REPO

    - name: Commit log_accounts.json
      if: ${{ env.COMMIT_LOG_ACCOUNTS_JSON_AFTER_RUNNING_BOT == 'True' }}
      run: |
        git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add Logs_accounts.txt
          git commit -m "Upload Logs_accounts.txt"
          git push -f

# DELETE WORKFLOWS WHICH ARE OLDER THAN ... SEC

  Delete_old_workflows:
    runs-on: ubuntu-latest
    steps:
      - name: Delete old workflow runs
        if: ${{ env.DELETE_OLD_WORKFLOWS }}
        uses: MajorScruffy/delete-old-workflow-runs@v0.3.0
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          repository: ${{ github.repository }}
          older-than-seconds: ${{ env.DELETE_OLD_WORKFLOWS_SECOND }}
